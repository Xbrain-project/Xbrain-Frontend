{"ast":null,"code":"var _jsxFileName = \"/Users/napasorn/Desktop/work/SoftAr/xbrain/Frontend/src/components/file-base64/index.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FileBase64(_ref) {\n  let {\n    multiple,\n    onDone,\n    disabled,\n    a,\n    name,\n    click\n  } = _ref;\n  const handleChange = e => {\n    // get the files\n    let files = e.target.files;\n\n    // Process each file\n    var allFiles = [];\n    for (var i = 0; i < files.length; i++) {\n      let file = files[i];\n\n      // Make new FileReader\n      let reader = new FileReader();\n\n      // Convert the file to base64 text\n      reader.readAsDataURL(file);\n\n      // on reader load somthing...\n      reader.onload = () => {\n        // Make a fileInfo Object\n        let fileInfo = {\n          name: file.name,\n          type: file.type,\n          size: Math.round(file.size / 1000) + \" kB\",\n          base64: reader.result,\n          file: file\n        };\n\n        // Push it to the state\n        allFiles.push(fileInfo);\n\n        // If all files have been proceed\n        if (allFiles.length == files.length) {\n          // Apply Callback function\n          if (multiple) onDone(allFiles);else onDone(allFiles[0]);\n        }\n      }; // reader.onload\n    } // for\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"form-control block w-full text-base font-normal text-purple-500 bg-white  bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out mt-3 mb-4  focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\",\n    type: \"file\",\n    id: a,\n    require: true,\n    onChange: handleChange,\n    multiple: multiple,\n    name: name,\n    disabled: disabled,\n    onClick: click\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_c = FileBase64;\nvar _c;\n$RefreshReg$(_c, \"FileBase64\");","map":{"version":3,"names":["React","FileBase64","multiple","onDone","disabled","a","name","click","handleChange","e","files","target","allFiles","i","length","file","reader","FileReader","readAsDataURL","onload","fileInfo","type","size","Math","round","base64","result","push"],"sources":["/Users/napasorn/Desktop/work/SoftAr/xbrain/Frontend/src/components/file-base64/index.js"],"sourcesContent":["import React from \"react\";\n\nexport default function FileBase64({ multiple, onDone ,disabled , a ,name,click}) {\n  const handleChange = (e) => {\n    // get the files\n    let files = e.target.files;\n\n    // Process each file\n    var allFiles = [];\n    for (var i = 0; i < files.length; i++) {\n      let file = files[i];\n\n      // Make new FileReader\n      let reader = new FileReader();\n\n      // Convert the file to base64 text\n      reader.readAsDataURL(file);\n\n      // on reader load somthing...\n      reader.onload = () => {\n        // Make a fileInfo Object\n        let fileInfo = {\n          name: file.name,\n          type: file.type,\n          size: Math.round(file.size / 1000) + \" kB\",\n          base64: reader.result,\n          file: file,\n        };\n\n        // Push it to the state\n        allFiles.push(fileInfo);\n\n        // If all files have been proceed\n        if (allFiles.length == files.length) {\n          // Apply Callback function\n          if (multiple) onDone(allFiles);\n          else onDone(allFiles[0]);\n        }\n      }; // reader.onload\n    } // for\n  };\n  \n  return (\n    <input\n      className=\"form-control block w-full text-base font-normal text-purple-500 bg-white \n      bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out mt-3 mb-4 \n      focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\"\n      type=\"file\"\n      id = {a}\n      require\n      onChange={handleChange}\n      multiple={multiple}\n      name = {name}\n      disabled = {disabled}\n      onClick = {click}\n    >\n      </input>\n  );\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,eAAe,SAASC,UAAU,OAAgD;EAAA,IAA/C;IAAEC,QAAQ;IAAEC,MAAM;IAAEC,QAAQ;IAAGC,CAAC;IAAEC,IAAI;IAACC;EAAK,CAAC;EAC9E,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B;IACA,IAAIC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;;IAE1B;IACA,IAAIE,QAAQ,GAAG,EAAE;IACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;MACrC,IAAIE,IAAI,GAAGL,KAAK,CAACG,CAAC,CAAC;;MAEnB;MACA,IAAIG,MAAM,GAAG,IAAIC,UAAU,EAAE;;MAE7B;MACAD,MAAM,CAACE,aAAa,CAACH,IAAI,CAAC;;MAE1B;MACAC,MAAM,CAACG,MAAM,GAAG,MAAM;QACpB;QACA,IAAIC,QAAQ,GAAG;UACbd,IAAI,EAAES,IAAI,CAACT,IAAI;UACfe,IAAI,EAAEN,IAAI,CAACM,IAAI;UACfC,IAAI,EAAEC,IAAI,CAACC,KAAK,CAACT,IAAI,CAACO,IAAI,GAAG,IAAI,CAAC,GAAG,KAAK;UAC1CG,MAAM,EAAET,MAAM,CAACU,MAAM;UACrBX,IAAI,EAAEA;QACR,CAAC;;QAED;QACAH,QAAQ,CAACe,IAAI,CAACP,QAAQ,CAAC;;QAEvB;QACA,IAAIR,QAAQ,CAACE,MAAM,IAAIJ,KAAK,CAACI,MAAM,EAAE;UACnC;UACA,IAAIZ,QAAQ,EAAEC,MAAM,CAACS,QAAQ,CAAC,CAAC,KAC1BT,MAAM,CAACS,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC1B;MACF,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;EACJ,CAAC;;EAED,oBACE;IACE,SAAS,EAAC,qPAEkE;IAC5E,IAAI,EAAC,MAAM;IACX,EAAE,EAAIP,CAAE;IACR,OAAO;IACP,QAAQ,EAAEG,YAAa;IACvB,QAAQ,EAAEN,QAAS;IACnB,IAAI,EAAII,IAAK;IACb,QAAQ,EAAIF,QAAS;IACrB,OAAO,EAAIG;EAAM;IAAA;IAAA;IAAA;EAAA,QAET;AAEd;AAAC,KAxDuBN,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}